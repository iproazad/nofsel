
import { GoogleGenAI } from "@google/genai";

export const handler = async (event: { body: string }) => {
  // Ensure the request is a POST request.
  // Netlify functions are typically triggered via POST for actions.
  // Note: Netlify's event object doesn't have a `method` property in this simple setup,
  // we infer it by the presence of a body.

  if (!event.body) {
    return {
      statusCode: 400,
      body: JSON.stringify({ error: "Missing request body" }),
    };
  }

  const apiKey = process.env.GEMINI_API_KEY;
  if (!apiKey) {
    return {
      statusCode: 500,
      body: JSON.stringify({ error: "API key is not configured on the server." }),
    };
  }

  try {
    const { prompt } = JSON.parse(event.body);

    if (!prompt) {
      return {
        statusCode: 400,
        body: JSON.stringify({ error: "Prompt is missing from the request body." }),
      };
    }
    
    const ai = new GoogleGenAI({ apiKey: apiKey });

    const response = await ai.models.generateImages({
      model: 'imagen-4.0-generate-001',
      prompt: prompt,
      config: {
        numberOfImages: 1,
        outputMimeType: 'image/png',
        aspectRatio: '1:1',
      },
    });

    if (response.generatedImages && response.generatedImages.length > 0) {
      const image = response.generatedImages[0];
      if (image.image?.imageBytes) {
         return {
          statusCode: 200,
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ imageB64: image.image.imageBytes }),
        };
      }
    }
    
    throw new Error('No image was generated by the API.');

  } catch (error) {
    console.error('Error in Netlify function:', error);
    const errorMessage = error instanceof Error ? error.message : 'An unknown internal error occurred.';
    return {
      statusCode: 500,
      body: JSON.stringify({ error: `Failed to generate logo: ${errorMessage}` }),
    };
  }
};
